:root {
    --device-width: 320px;
    --device-height: 720px;
}

body {
    background-color: var(--bs-dark);
    color: var(--bs-light);
}

.simulator {
    width: var(--device-width);
    height: var(--device-height);
    border: 2px solid var(--bs-secondary);
    border-radius: 20px;
    position: relative;
    background-color: var(--bs-dark);
    margin: 0 auto;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
}

.selection-box {
    position: absolute;
    border: 2px solid var(--bs-purple);
    background-color: rgba(111, 66, 193, 0.2);
    pointer-events: none;
}

.active-selection-box {
    position: absolute;
    border: 2px solid var(--bs-warning);
    background-color: rgba(255, 193, 7, 0.1);
    pointer-events: none;
    transition: all 0.3s ease-out;
}

.block {
    padding: 8px;
    margin: 5px 0;
    border-radius: 4px;
    position: relative;
    cursor: move;
    transition: all 0.3s ease-out;
}

.block.dragging {
    opacity: 0.5;
}

.block:hover {
    transform: translateX(5px);
}

.tap-block {
    background-color: rgba(13, 110, 253, 0.1);
    border: 1px solid var(--bs-primary);
}

.loop-block {
    background-color: rgba(25, 135, 84, 0.1);
    border: 1px solid var(--bs-success);
}

.block.focused {
    border-color: var(--bs-warning);
    box-shadow: 0 0 10px rgba(255, 193, 7, 0.3);
}

.task-container {
    display: flex;
    gap: 1rem;
}

.sidebar {
    background-color: var(--bs-dark);
    border-left: 1px solid var(--bs-secondary);
    transition: transform 0.3s ease-out;
    height: 100vh;
    position: fixed;
    right: 0;
    top: 0;
    z-index: 1000;
    padding: 1rem;
    overflow-y: auto;
}

@media (max-width: 768px) {
    .sidebar {
        transform: translateX(100%);
    }
    .sidebar.show {
        transform: translateX(0);
    }
}

.task-list {
    list-style: none;
    padding: 0;
    margin: 0;
}

.task-list-item {
    padding: 0.5rem;
    margin-bottom: 0.5rem;
    border: 1px solid var(--bs-secondary);
    border-radius: 4px;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.task-list-item:hover {
    background-color: rgba(255, 255, 255, 0.1);
}

.task-list-item.active {
    border-color: var(--bs-primary);
    background-color: rgba(13, 110, 253, 0.1);
}

.deleted-task-list {
    opacity: 0.7;
}

.deleted-task-list .task-list-item {
    border-style: dashed;
}

.restore-btn {
    opacity: 0;
    transition: opacity 0.2s ease-out;
}

.task-list-item:hover .restore-btn {
    opacity: 1;
}

.task-block {
    background-color: var(--bs-dark);
    border: 1px solid var(--bs-secondary);
    border-radius: 8px;
    padding: 10px;
    margin-bottom: 10px;
}

.nested-blocks {
    margin-left: 20px;
    padding-left: 10px;
    border-left: 2px solid var(--bs-secondary);
}

.delete-dot {
    position: absolute;
    top: -5px;
    right: -5px;
    width: 12px;
    height: 12px;
    background-color: var(--bs-danger);
    border-radius: 50%;
    cursor: pointer;
    transition: transform 0.2s ease;
}

.delete-dot:hover {
    transform: scale(1.2);
}

.live-console {
    height: 200px;
    overflow-y: auto;
    background-color: var(--bs-dark);
    padding: 10px;
    font-family: monospace;
    border: 1px solid var(--bs-secondary);
    border-radius: 4px;
}

.task-log {
    max-height: 400px;
    overflow-y: auto;
}

.active-block {
    border-color: var(--bs-warning);
    box-shadow: 0 0 5px var(--bs-warning);
}

.block h6 {
    margin-bottom: 10px;
    color: var(--bs-light);
}

.input-group {
    margin-bottom: 10px;
}

.input-group-text {
    background-color: var(--bs-dark);
    color: var(--bs-light);
    border-color: var(--bs-secondary);
}

.form-control {
    background-color: var(--bs-dark);
    color: var(--bs-light);
    border-color: var(--bs-secondary);
}

.form-control:focus {
    background-color: var(--bs-dark);
    color: var(--bs-light);
}

/* Add to the end of the existing CSS file */

.chat-messages {
    height: 250px;
    overflow-y: auto;
    padding: 1rem;
    background-color: var(--bs-dark);
    border: 1px solid var(--bs-secondary);
    border-radius: 4px;
}

.chat-message {
    margin-bottom: 1rem;
    padding: 0.5rem 1rem;
    border-radius: 1rem;
    max-width: 80%;
}

.chat-message.user {
    background-color: var(--bs-primary);
    color: var(--bs-light);
    margin-left: auto;
    border-bottom-right-radius: 0.25rem;
}

.chat-message.assistant {
    background-color: var(--bs-secondary);
    color: var(--bs-light);
    margin-right: auto;
    border-bottom-left-radius: 0.25rem;
}

.chat-message .timestamp {
    font-size: 0.75rem;
    opacity: 0.7;
    display: block;
    margin-top: 0.25rem;
}

.chat-input-container {
    position: relative;
}

#chatInput {
    padding-right: 4rem;
}

#sendChatBtn {
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: 4;
}

.chat-thinking {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    opacity: 0.7;
    padding: 0.5rem;
}

.chat-thinking .dot {
    width: 8px;
    height: 8px;
    background-color: var(--bs-light);
    border-radius: 50%;
    animation: chatThinking 1.4s infinite ease-in-out;
}

.chat-thinking .dot:nth-child(2) {
    animation-delay: 0.2s;
}

.chat-thinking .dot:nth-child(3) {
    animation-delay: 0.4s;
}

@keyframes chatThinking {
    0%, 80%, 100% { 
        transform: scale(0);
    } 
    40% { 
        transform: scale(1);
    }
}

/* Add after the existing .tap-block styles */

.undefined-region {
    border-color: var(--bs-warning) !important;
}

.blink-warning {
    color: var(--bs-warning);
    animation: blink 1s ease-in-out infinite;
    margin-left: 0.5rem;
}

@keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
}

/* Make sure these tap feedback styles are at the end */
.tap-feedback {
    position: absolute;
    width: 20px;
    height: 20px;
    background-color: rgba(255, 193, 7, 0.5);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
    animation: tapPulse 0.5s ease-out;
}

@keyframes tapPulse {
    0% {
        transform: translate(-50%, -50%) scale(0.5);
        opacity: 1;
    }
    100% {
        transform: translate(-50%, -50%) scale(2);
        opacity: 0;
    }
}